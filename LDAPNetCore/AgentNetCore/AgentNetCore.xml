<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AgentNetCore</name>
    </assembly>
    <members>
        <member name="M:AgentNetCore.Controllers.AuthController.Signin(AgentNetCore.Data.VO.ClientVO)">
            <summary>
            Autenticação do Client da API Agent.
            </summary>
            <param name="client"></param>
            <returns>Retorna os campos do Client</returns>
        </member>
        <member name="M:AgentNetCore.Controllers.AuthController.Refresh(AgentNetCore.Data.VO.TokenVO)">
            <summary>
            Renovação do Token para o Client da API Agent
            </summary>
            <param name="token"></param>
            <returns>Retorna os campos do Token</returns>
        </member>
        <member name="M:AgentNetCore.Controllers.AuthController.Revoke">
            <summary>
            Revogação do Token para o Client da API Agent
            </summary>
            <returns>Retorno No Content</returns>
        </member>
        <member name="M:AgentNetCore.Controllers.ForestsController.Get">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgentNetCore.Controllers.ForestsController.Get(System.String)">
            <summary>
            
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.Get">
            <summary>
            GET para todos os grupos de segurança dos diretórios disponíveis
            </summary>
            <remarks>
            Retorna todos os objetos no formato GrupoVo
            </remarks>
            <returns>O retorno desse serviço é uma List de GroupVO </returns>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.Get(System.String,System.String)">
            <summary>
            GET para um determinado grupo de segurança dos diretórios disponíveis
            </summary>
            <param name="domain"></param>
            <param name="samName"></param>
            <returns></returns>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.Post(AgentNetCore.Data.VO.GroupVO)">
            <summary>
            POST para um determinado grupo dos diretórios disponíveis
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.Put(AgentNetCore.Data.VO.GroupVO)">
            <summary>
            PUT para um determinado grupo dos diretórios disponíveis
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.Delete(System.String,System.String)">
            <summary>
            DELETE um determinado grupos dos diretórios disponíveis
            </summary>
            <param name="domain"></param>
            <param name="samName"></param>
            <returns></returns>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.SCRIPT">
             <summary>
             The logon script is executed. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.ACCOUNTDISABLE">
             <summary>
             The user account is disabled. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.HOMEDIR_REQUIRED">
             <summary>
             The home directory is required. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.LOCKOUT">
             <summary>
             The account is currently locked out. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.PASSWD_NOTREQD">
             <summary>
             No password is required. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:AgentNetCore.Context.UserRepository.UserAccountControl.PASSWD_CANT_CHANGE" -->
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.ENCRYPTED_TEXT_PASSWORD_ALLOWED">
             <summary>
             The user can send an encrypted password. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.TEMP_DUPLICATE_ACCOUNT">
             <summary>
             This is an account for users whose primary account is in another domain. This account provides user access to this domain, but not 
             to any domain that trusts this domain. Also known as a local user account. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.NORMAL_ACCOUNT">
             <summary>
             This is a default account type that represents a typical user. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.INTERDOMAIN_TRUST_ACCOUNT">
             <summary>
             This is a permit to trust account for a system domain that trusts other domains. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.WORKSTATION_TRUST_ACCOUNT">
             <summary>
             This is a computer account for a computer that is a member of this domain. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.SERVER_TRUST_ACCOUNT">
             <summary>
             This is a computer account for a system backup domain controller that is a member of this domain. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.Unused1">
             <summary>
             Not used. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.Unused2">
             <summary>
             Not used. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.DONT_EXPIRE_PASSWD">
             <summary>
             The password for this account will never expire. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.MNS_LOGON_ACCOUNT">
             <summary>
             This is an MNS logon account. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.SMARTCARD_REQUIRED">
             <summary>
             The user must log on using a smart card. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.TRUSTED_FOR_DELEGATION">
             <summary>
             The service account (user or computer account), under which a service runs, is trusted for Kerberos delegation. Any such service 
             can impersonate a client requesting the service. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.NOT_DELEGATED">
             <summary>
             The security context of the user will not be delegated to a service even if the service account is set as trusted for Kerberos delegation. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.USE_DES_KEY_ONLY">
             <summary>
             Restrict this principal to use only Data Encryption Standard (DES) encryption types for keys. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.DONT_REQUIRE_PREAUTH">
             <summary>
             This account does not require Kerberos pre-authentication for logon. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.PASSWORD_EXPIRED">
             <summary>
             The user password has expired. This flag is created by the system using data from the Pwd-Last-Set attribute and the domain policy. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION">
             <summary>
             The account is enabled for delegation. This is a security-sensitive setting; accounts with this option enabled should be strictly 
             controlled. This setting enables a service running under the account to assume a client identity and authenticate as that user to 
             other remote servers on the network.
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.PARTIAL_SECRETS_ACCOUNT">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.USE_AES_KEYS">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgentNetCore.Data.VO.ClientVO">
            <summary>
            Client VO Teste
            </summary>
        </member>
        <member name="P:AgentNetCore.Data.VO.ClientVO.Password">
            <summary>
            Passowrd
            </summary>
        </member>
        <member name="P:AgentNetCore.Data.VO.ClientVO.UserName">
            <summary>
            User Name
            </summary>
        </member>
    </members>
</doc>
