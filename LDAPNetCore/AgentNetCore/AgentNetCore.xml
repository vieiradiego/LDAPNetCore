<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AgentNetCore</name>
    </assembly>
    <members>
        <member name="M:AgentNetCore.Controllers.AuthController.Signin(AgentNetCore.Data.VO.ClientVO)">
            <summary>
            AUTENTICAR um Cliente.
            </summary>
            <remarks>
            Retorna um objeto no formato TokenVO
            </remarks>
            <returns>O retorno desse serviço é um determinado TokenVO 
            com os dados necessários para acessar a API REST</returns>
            <param name="client"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.AuthController.Refresh(AgentNetCore.Data.VO.TokenVO)">
            <summary>
            ATUALIZAR os dados de acesso de um Cliente.
            </summary>
            <remarks>
            Retorna um objeto no formato TokenVO
            </remarks>
            <returns>O retorno desse serviço é um determinado TokenVO com os dados necessários para acessar a API REST</returns>
            <param name="accessToken"></param>
            <param name="refreshToken"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.AuthController.Revoke">
            <summary>
            ATUALIZAR os dados de acesso de um Cliente.
            </summary>
            <remarks>
            Não há retorno de objetos nesse método
            </remarks>
            <returns>O retorno desse serviço é código HTTP</returns>
            <param name="userName"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.ForestsController.Get(System.String)">
            <summary>
            RECUPERAR todos os objetos do Domínios configurados
            </summary>
            <remarks>
            Retorna uma lista de objetos no formato ForestVO
            </remarks>
            <returns>O retorno desse serviço é uma lista de ForestVO </returns>
            <param name="dn"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.ForestsController.Find(System.String)">
            <summary>
            RECUPERAR os dados para um determinado Domínio
            </summary>
            <remarks>
            Retorna um objeto no formato ForestVO
            </remarks>
            <returns>O retorno desse serviço é um determinado ForestVO encontrado</returns>
            <param name="dn"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.Get(System.String)">
            <summary>
            RECUPERAR todos os Grupos
            </summary>
            <remarks>
            Retorna uma lista de objetos no formato GroupVO
            </remarks>
            <returns>O retorno desse serviço é uma lista de GroupVO </returns>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.GetBySamName(System.String,System.String,System.String)">
            <summary>
            RECUPERAR os dados para um determinado Grupo
            </summary>
            <remarks>
            Retorna um objeto no formato GroupVO
            </remarks>
            <returns>O retorno desse serviço é um determinado GroupVO encontrado</returns>
            <param name="dn"></param>
            <param name="email"></param>
            <param name="samName"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.Post(AgentNetCore.Data.VO.GroupVO)">
            <summary>
            CRIAR um Grupo
            </summary>
            <remarks>
            Retorna um objeto no formato GroupVO
            </remarks>
            <returns>O retorno desse serviço é um GroupVO criado</returns>
            <param name="group"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.Put(AgentNetCore.Data.VO.GroupVO)">
            <summary>
            ATUALIZAR um Grupo
            </summary>
            <remarks>
            Retorna um objeto no formato GroupVO
            </remarks>
            <returns>O retorno desse serviço é um GroupVO atualizado</returns>
            <param name="group"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.Delete(System.String,System.String)">
            <summary>
            DELETAR um Grupo
            </summary>
            <remarks>
            Não há retorno de objetos nesse método
            </remarks>
            <returns>O retorno desse serviço é código HTTP</returns>
            <param name="dn"></param>
            <param name="samName"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.GetUsers(AgentNetCore.Data.VO.GroupVO)">
            <summary>
            RECUPERAR os Usuários de um Grupo
            </summary>
            <remarks>
            Retorna uma lista de objetos no formato UserVO
            </remarks>
            <returns>O retorno desse serviço é uma lista de UserVO encontrados pelo Usuário informado</returns>
            <param name="group"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.AddUser(System.String,System.String)">
            <summary>
            INCLUIR um Usuário em um Grupo
            </summary>
            <remarks>
            Retorna uma lista de objetos no formato UserVO
            </remarks>
            <returns>O retorno desse serviço é uma lista de UserVO encontrados pelo Usuário informado</returns>
            <param name="samNameUser"></param>
            <param name="samNameNewGroup"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.GroupsController.ChangeGroup(System.String,System.String,System.String)">
            <summary>
            ALTERAR o Usuário de um Grupo Antigo para um Grupo Novo
            </summary>
            <remarks>
            Retorna uma lista de objetos no formato GroupVO
            </remarks>
            <returns>O retorno desse serviço é uma lista de GroupVO encontrados no Usuário informado</returns>
            <param name="samNameUser"></param>
            <param name="samNameNewGroup"></param>
            <param name="samNameOldGroup"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.OrganizationsUnitsController.Get(System.String)">
            <summary>
            RECUPERAR todas as Unidades Organizacionais (OU)
            </summary>
            <remarks>
            Retorna uma lista de objetos no formato OrganizationalUnitVO
            </remarks>
            <returns>O retorno desse serviço é uma lista de OrganizationalUnitVO </returns>
            <param name="domain"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.OrganizationsUnitsController.Get(System.String,System.String)">
            <summary>
            RECUPERAR os dados de uma determinada Unidade Organizacional (OU)
            </summary>
            <remarks>
            Retorna um objeto no formato OrganizationalUnitVO
            </remarks>
            <returns>O retorno desse serviço é um determinado OrganizationalUnitVO encontrado</returns>
            <param name="domain"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:AgentNetCore.Controllers.OrganizationsUnitsController.Post(AgentNetCore.Data.VO.OrganizationalUnitVO)">
            <summary>
            CRIAR uma Unidade Organizacional (OU)
            </summary>
            <remarks>
            Retorna um objeto no formato OrganizationalUnitVO
            </remarks>
            <returns>O retorno desse serviço é um OrganizationalUnitVO criado</returns>
            <param name="orgUnit"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.OrganizationsUnitsController.Put(AgentNetCore.Data.VO.OrganizationalUnitVO)">
            <summary>
            ATUALIZAR uma Unidade Organizacional (OU)
            </summary>
            <remarks>
            Retorna um objeto no formato OrganizationalUnitVO
            </remarks>
            <returns>O retorno desse serviço é um OrganizationalUnitVO atualizado</returns>
            <param name="orgUnit"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.OrganizationsUnitsController.Delete(System.String,System.String)">
            <summary>
            DELETAR uma Unidade Organizacional (OU)
            </summary>
            <remarks>
            Não há retorno de objetos nesse método
            </remarks>
            <returns>O retorno desse serviço é código HTTP</returns>
            <param name="domain"></param>
            <param name="samName"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.UsersController.Get(System.String)">
            <summary>
            RECUPERAR os dados de todos os Usuários. 
            </summary>
            <remarks>
            Retorna uma lista de objetos no formato UserVO
            </remarks>
            <returns>O retorno desse serviço é uma lista de UserVO </returns>
            <param name="dn"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.UsersController.Find(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            RECUPERAR os dados de um determinado Usuário
            </summary>
            <remarks>
            Retorna um objeto no formato UsuarioVO
            </remarks>
            <returns>O retorno desse serviço é um determinado UsuarioVO encontrado</returns>
            <param name="dn"></param>
            <param name="email"></param>
            <param name="samName"></param>
            <param name="firstName"></param>
            <param name="lastName"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.UsersController.Post(AgentNetCore.Data.VO.UserVO)">
            <summary>
            CRIAR um Usuário
            </summary>
            <remarks>
            Retorna um objeto no formato UserVO
            </remarks>
            <returns>O retorno desse serviço é um UserVO criado</returns>
            <param name="user"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.UsersController.Put(AgentNetCore.Data.VO.UserVO)">
            <summary>
            ATUALIZAR um Usuário
            </summary>
            <remarks>
            Retorna um objeto no formato UserVO
            </remarks>
            <returns>O retorno desse serviço é um UserVO atualizado</returns>
            <param name="user"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.UsersController.Delete(System.String,System.String)">
            <summary>
            DELETAR um Usuário
            </summary>
            <remarks>
            Não há retorno de objetos nesse método
            </remarks>
            <returns>O retorno desse serviço é código HTTP</returns>
            <param name="dn"></param>
            <param name="samname"></param>
        </member>
        <member name="M:AgentNetCore.Controllers.UsersController.GetGroups(System.String)">
            <summary>
            RECUPERAR os Grupos de um Usuário
            </summary>
            <remarks>
            Retorna uma lista de objetos no formato GrupoVO
            </remarks>
            <returns>O retorno desse serviço é uma lista de GrupoVO encontrados pelo Usuário informado</returns>
            <param name="samNameUser"></param>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.SCRIPT">
             <summary>
             The logon script is executed. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.ACCOUNTDISABLE">
             <summary>
             The user account is disabled. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.HOMEDIR_REQUIRED">
             <summary>
             The home directory is required. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.LOCKOUT">
             <summary>
             The account is currently locked out. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.PASSWD_NOTREQD">
             <summary>
             No password is required. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:AgentNetCore.Context.UserRepository.UserAccountControl.PASSWD_CANT_CHANGE" -->
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.ENCRYPTED_TEXT_PASSWORD_ALLOWED">
             <summary>
             The user can send an encrypted password. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.TEMP_DUPLICATE_ACCOUNT">
             <summary>
             This is an account for users whose primary account is in another domain. This account provides user access to this domain, but not 
             to any domain that trusts this domain. Also known as a local user account. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.NORMAL_ACCOUNT">
             <summary>
             This is a default account type that represents a typical user. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.INTERDOMAIN_TRUST_ACCOUNT">
             <summary>
             This is a permit to trust account for a system domain that trusts other domains. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.WORKSTATION_TRUST_ACCOUNT">
             <summary>
             This is a computer account for a computer that is a member of this domain. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.SERVER_TRUST_ACCOUNT">
             <summary>
             This is a computer account for a system backup domain controller that is a member of this domain. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.Unused1">
             <summary>
             Not used. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.Unused2">
             <summary>
             Not used. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.DONT_EXPIRE_PASSWD">
             <summary>
             The password for this account will never expire. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.MNS_LOGON_ACCOUNT">
             <summary>
             This is an MNS logon account. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.SMARTCARD_REQUIRED">
             <summary>
             The user must log on using a smart card. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.TRUSTED_FOR_DELEGATION">
             <summary>
             The service account (user or computer account), under which a service runs, is trusted for Kerberos delegation. Any such service 
             can impersonate a client requesting the service. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.NOT_DELEGATED">
             <summary>
             The security context of the user will not be delegated to a service even if the service account is set as trusted for Kerberos delegation. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.USE_DES_KEY_ONLY">
             <summary>
             Restrict this principal to use only Data Encryption Standard (DES) encryption types for keys. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.DONT_REQUIRE_PREAUTH">
             <summary>
             This account does not require Kerberos pre-authentication for logon. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.PASSWORD_EXPIRED">
             <summary>
             The user password has expired. This flag is created by the system using data from the Pwd-Last-Set attribute and the domain policy. 
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION">
             <summary>
             The account is enabled for delegation. This is a security-sensitive setting; accounts with this option enabled should be strictly 
             controlled. This setting enables a service running under the account to assume a client identity and authenticate as that user to 
             other remote servers on the network.
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.PARTIAL_SECRETS_ACCOUNT">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgentNetCore.Context.UserRepository.UserAccountControl.USE_AES_KEYS">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgentNetCore.Data.VO.ClientVO">
            <summary>
            Cliente VO
            </summary>
        </member>
        <member name="P:AgentNetCore.Data.VO.ClientVO.UserName">
            <summary>
            User Name
            </summary>
        </member>
        <member name="P:AgentNetCore.Data.VO.ClientVO.Password">
            <summary>
            Passowrd
            </summary>
        </member>
    </members>
</doc>
